<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFo24ABbNuADWjbgJFk14GRYNOClVzPg1FYy
        4O5VMeD7VC/f/VQu3/JTLd/cUizfs1Er33VRKt4yTyneB1Ap3gBMKd8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFs44ABcOd8CWzjhMFs34I5aNuDZWTXg+Vg0
        4P9XM+D/VjLg/1Yx4P9VMN//VC7f/1Mt3/9SLN//USvf/FAq3+VPKd+kTyjeRUwm3QdNJt0ATgDeAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFo64ABdOuEAXTrgFVw54X5bOOHkWzfh/1o2
        4P9ZNeD/WDTg/1cy4P9WMeD/VTDg/1Uw3/9VL9//VC7f/1It3/9RK9//UCrf/08p3/9PKN7xTibenU0l
        3idRLuEASyPeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfON8AXjziAF474S1dO+G3XTrh/Fw5
        4f9bN+H/WDTg/1Uw4P9TLd//Uy3f/1Mu3/9UL9//VTHg/1Yy4P9XM+D/VzPg/1Yx4P9TLd//UCnf/08o
        3v9OJ97/TSXe00wk3ktJIN0BSyPdAAAAAAAAAAAAAAAAAAAAAAAAAAAAXz3fAF474gBePOE4Xjzh0F07
        4f9dOuH/Wjbh/1Qv3/9QKt7/UCrf/1Er3/9SLN//Uy7f/1Qv3/9VMeD/VjLg/1gz4P9ZNeD/Wjbg/1o2
        4P9XM+D/USvf/04n3v9NJd7/TCTe6Esj3VxHINwCSiPdAAAAAAAAAAAAAAAAAF8/4ABfPeEAXz7hLl89
        4c9ePOH/XTvh/1g04P9QKt//Tife/08o3v9QKt//USvf/1Is3/9TLt//VC/f/1Ux4P9WMuD/WDPg/1k1
        4P9aNuD/Wzfh/1w54f9bOOH/VC/f/00m3v9MJN7/SyPe6Uoi3lJOKd4ASSDdAAAAAAAAAAAAYD7hAGA+
        4RVgPuG3Xz3h/1484f9YM+D/Tife/00l3v9OJ97/Tyje/1Aq3/9RK9//Uizf/1Mu3/9VL9//VjHg/1cy
        4P9YM+D/WTXg/1o24P9bN+H/XDnh/1064f9dOuH/VTDf/0wl3v9LI97/SiLe20oh3TJKIt0ARh7bAGE/
        4ABmPtsBYD/ifmA+4f1fPeH/WTXg/00m3v9MJN7/TSbe/04n3v9OKN7/TSbd/0wn2P9NKNj/TinY/08r
        2P9QLNn/US3Z/1Iv2f9TMNn/VDHZ/1Uz2f9ZN93/XTrh/1474f9ePOH/VC/f/0sj3v9KIt7/SiHdrkgf
        3A1JIN0AYUDiAGE/4jFhP+LjYD7h/1064P9OJ97/SyPe/0wk3v9NJt7/TSbe/1s34P+Fbdv/jHrS/4x6
        0f+NetH/jXvR/4580f+OfdH/j33R/49+0f+Ug9L/jXzP/2FE0P9cOeH/Xjvh/1894f9ePOH/USrf/0oi
        3v9JId34SSDdXEoh3QBjP94BYUDijmE/4v9gPuH/Uy7f/0oi3v9LI97/TCTe/00m3v9RK9//nYno/5J8
        4/99YOf/fmLn/39j5/+AZOf/gGXo/4Fm6P+CZ+j/gmfo/7iq7v+TgNj/YkHh/1w54f9eO+H/Xz3h/2A+
        4f9bN+H/TCTe/0kh3f9JIN2+Rx/cEmJA4iViQOLZYUDi/1w54f9LJN3/SiLe/0sj3v9MJN7/TCXe/1w4
        4f+pmuD/Ti3G/0sk3f9MJtv/TSfb/04o2/9PKtz/UCvc/1It3P9SLdz/nIjm/21Uyv9YNd//XTrh/147
        4f9fPeH/YD7h/2A/4v9SLd//SSHd/0gg3fNIH9xSYkHiZWJA4vlhP+L/VC/f/0kg3f9KIt7/SyPe/0wk
        3v9MJd7/Wzfh/8/F8f95Zcb/c1rU/3pkzP96ZMz/e2XM/3tmzf98Zs3/fWfN/3xnzf+2quH/iHfK/1Y2
        0f9dOuL/Xjvh/1894f9gPuH/YUDi/1o34f9KIt3/SCDd/0gf3aFiQeKmYkDi/2A+4v9OJ97/SSDd/0oi
        3v9LI97/TCTe/0wl3v9aNuD/3db4/6WY1v/e2fL/+/r8//n4+//5+fv/+fn7//n5+//5+fv/+fn7//7+
        /v/Pyef/Wz3O/1w64v9eO+H/Xz3h/2A+4f9hP+L/Xz3i/00m3v9IIN3/SB/d3mJB4tRiQeL/XTrh/0oi
        3v9JIN3/SiLe/0sj3v9MJN7/TCXe/1o24P/d1vj/pZnW/+Pe9f//////////////////////////////
        /////////////9PN6f9cPs7/XDri/1474f9fPeH/YD7h/2E/4v9hQOL/Uivf/0gf3f9IH938YkHi7mJB
        4v9aN+H/SSDd/0kg3f9KIt7/SyPe/0wk3v9MJd7/Wjbg/93W+P+lmdb/4971////////////////////
        ////////////////////////083p/1w+zv9cOuL/Xjvh/1894f9gPuH/YT/i/2JB4v9VMN//SCDd/0gf
        3f9iQeL8YkHi/1k14P9IIN3/SSDd/0oi3v9LI97/TCTe/0wl3v9aNuD/3db4/6WZ1v/j3vX/////////
        ///////////////////////////////////Tzen/XD7O/1w64v9eO+H/Xz3h/2A+4f9hP+L/YkHi/1cy
        4P9IIN3/SB/d/2JB4v1iQeL/WDTg/0gg3f9JIN3/SiLe/0sj3v9MJN7/TCXe/1o24P/d1vj/pZnW/+Pe
        9f///////////////////////////////////////////9PN6f9cPs7/XDri/1474f9fPeH/YD7h/2E/
        4v9iQeL/VzPg/0gg3f9IH93/YkHi82JB4v9aNuH/SCDd/0kg3f9KIt7/SyPe/0wk3v9MJd7/Wjbg/93W
        +P+lmdb/4971///////8/P7/8/L6////////////+/r+//b1/v//////083p/1w+zv9cOuL/Xjvh/189
        4f9gPuH/YT/i/2JB4v9WMd//SCDd/0gf3f9iQeLcYkHi/1w54f9KIt3/SSDd/0oi3v9LI97/TCTe/0wl
        3v9aNuD/3db4/6WZ1v/j3vX///////Hv+P+PfdP/wrjp/+Lc9v+hjub/wLTv///////Tzen/XD7O/1w6
        4v9eO+H/Xz3h/2A+4f9hP+L/YkDi/1Mt3/9IH93/SB/d/2JB4rNiQOL/Xz3i/00m3v9JIN3/SiLe/0sj
        3v9MJN7/TCXe/1o24P/d1vj/pZnW/+Pe9f//////7+z3/5OC0f+rntn/nI3V/6WX3f+5rej//////9PN
        6f9cPs7/XDri/1474f9fPeH/YD7h/2E/4v9gPuL/Tyfe/0gg3f9IH93pYkHid2JA4v1hP+L/Ui3f/0kg
        3f9KIt7/SyPe/0wk3v9MJd7/Wjbg/93W+P+lmdb/4971///////u7Pb/n5HU//f2/f/8+/3/z8jq/7qu
        6P//////083p/1w+zv9cOuL/Xjvh/1894f9gPuH/YUDi/1w54f9LI93/SCDd/0gf3bRhQeEzYkDi5WFA
        4v9aNuD/SiLd/0oi3v9LI97/TCTe/0wl3v9bNuD/3tb4/6WY1v/j3vX//////+7s9v+fkNT/+fj+////
        ///PyOr/uq7o///////Tzen/XD7O/1w64v9eO+H/Xz3h/2A+4f9hP+L/VC/g/0kh3f9IIN35SB/dZmNA
        4QdiQOKlYT/i/1894f9RK97/SiHe/0sj3v9MJN7/TSXe/1Yx3//Qxvb/p5rZ/+Pf9f//////7uz3/6CR
        1f/6+P7//////8/I6v+7r+n//////9PO6v9cPs//XDni/1474f9fPeH/YD7h/1064f9NJt7/SSHd/0kg
        3dBIH9wfYUDiAGFA4kZhP+LxYD7h/1s34P9MJd7/SyPe/0wk3v9NJt7/Tibe/3pc5v+Fa+X/s6Pw/8a6
        9f+7rPH/inLj/8K19P/IvPX/qZfs/5uG6v/Kv/X/rZzt/18+3f9cOuH/Xjvh/1894f9fPeH/Uy7f/0oi
        3v9JId3+SSDdd00i3QBgQOIAYT/hB2A/4p5gPuH/Xz3h/1Yy4P9MJN7/TCTe/00m3v9OJ97/Tife/1Ap
        3/9SLN//Uy3f/1Qv3/9VMOD/VjLg/1cz4P9YNOD/WTXg/1o34P9bOOH/XDnh/1064f9eO+H/Xz3h/1cz
        4P9MJN7/SiLe/0oh3clJIN0bSSDdAAAAAABgPuIAYD7iKWA+4dRfPeH/Xjvh/1Qv4P9MJd7/TSbe/04n
        3v9PKN7/UCrf/1Er3/9SLN//Uy7f/1Qv3/9VMeD/VjLg/1gz4P9ZNeD/Wjbg/1s34f9cOeH/XTrh/147
        4f9YNOD/TSbe/0sj3v9KIt7uSiHdT0oi3gBJId0AAAAAAGA74gBfP+EAYD3hTV894ehePOH/XTrh/1Uw
        4P9OJ97/Tife/08o3v9QKt//USvf/1Is3/9TLt//VC/f/1Ux4P9WMuD/WDPg/1k14P9aNuD/Wzfh/1w5
        4f9cOeH/VzPg/04n3v9MJN7/SyPe+Eoi3nlIIN0DSSLdAAAAAAAAAAAAAAAAAF494ABcPN4BXz3hXV48
        4epdO+H/XDrh/1g04P9SK9//Tyne/1Aq3/9RK9//Uizf/1Mu3/9UL9//VTHg/1Yy4P9YM+D/WTXg/1o2
        4P9bN+H/WTbh/1Qv3/9OJ97/TSXe/0wk3vhLI96HSyLeCksj3gAAAAAAAAAAAAAAAAAAAAAAAAAAAF48
        3wBePd4CXjzhU1074dxdOuH/XDnh/1o24P9WMd//Uy3f/1Is3/9SLN//Uy7f/1Qv3/9VMeD/VjLg/1gz
        4P9YNOD/WDPg/1Uw4P9RK9//Tyje/04n3v9NJd7uTCTeeEoj3QpLJN4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAF074ABCZcYAXTrhMlw54bBcOOH4Wzfh/1o24P9ZNeD/VzPg/1Yx4P9VMOD/VTDg/1Uw
        3/9VMN//VTDf/1Mu3/9SLN//UCrf/08p3/9PKN79Tifey00m3k5MJN0ETCXdAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFk94wBcON8AWzngDls44V1bN+DAWjbg9Fk14P9YNOD/VzPg/1Yy
        4P9WMeD/VTDf/1Qu3/9TLd//Uizf/1Er3/9QKt/5Tynf0k4o3ndOJt4bTyvfAE0k3gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZNuAAWTfeAFo34BJaNuBTWTXgo1g0
        4OBXM+D9VjLg/1Yx4P9VMN//VC7f/1Mt3/9SLN/qUSvftVAq32dPKN4fSifZAU0o3AAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/8AAA/+AAAD/AAAAfgAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAD4AAAB/AAAA/8AAAf/gAAf/+AAP8=
</value>
  </data>
</root>